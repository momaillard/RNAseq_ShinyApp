shiny::runApp('RNA_seq_ShinyApp')
runApp('runApp.R')
load(file = "./data/dataForApp.RData")
Git.tVSD.center.scaled
runApp('runApp.R')
###############################
#####   Resume of data    #####
###############################
myURL <- "https://github.com/momaillard/RNAseq_ShinyApp/blob/master/data/dataForApp.RData"
load(url(myURL))
download.file(githubURL,"myfile")
download.file(myURL,"myfile")
load("myfile")
load(myURL)
?load()
?GetURL
?RCurl
library(shiny)
?runUrl
?runGitHub
?runGitHub("https://github.com/momaillard/RNAseq_ShinyApp/")
?runGitHub("https://github.com/momaillard/RNAseq_ShinyApp/")
runGitHub("https://github.com/momaillard/RNAseq_ShinyApp/")
runGitHub("https://github.com/momaillard/RNAseq_ShinyApp")
runGitHub("momaillard/RNAseq_ShinyApp")
runGitHub("momaillard/RNAseq_ShinyApp")
runGitHub("momaillard/RNAseq_ShinyApp")
###############################
#####   Resume of data    #####
###############################
myURL <- "https://github.com/momaillard/RNAseq_ShinyApp/raw/master/data/dataForApp.RData"
###############################
#####   Resume of data    #####
###############################
myURL <- "https://github.com/momaillard/RNAseq_ShinyApp/raw/master/data/dataForApp.RData"
load(url(myURL))
# library
library(shiny)
library(ggplot2)
library(shinyWidgets)
library(shinydashboard)
library(DT)
library(pheatmap)
library(tidyr)
library(dplyr)
#library(SGSeq)
#library(GenomicFeatures)
#library(BSgenome.Vvinifera.URGI.IGGP12Xv0) # genome de la vigne format BS
library(shinyBS) # allow popup windows
imgsize <- "auto 40%"
img <- 'http://northerntechmap.com/assets/img/loading-dog.gif'
###############################
#####   Resume of data    #####
###############################
myURL <- "https://github.com/momaillard/RNAseq_ShinyApp/raw/master/data/dataForApp.RData"
load(url(myURL))
source(file = "src/source2App.R")
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "SweetK"),
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("Expression Plot", tabName = "expressionPlot", icon = icon("chart-line")),
menuItem("TPM normalisation", tabName = "TPM_expression", icon = icon("balance-scale")),
menuItem("Download Expression Matrix", tabName = "downloadTab", icon = icon("file-download")),
menuItem("SOM View", tabName = "SomClustering", icon = icon("layer-group")),
menuItem("Expression heatmap", tabName = "heatmapExpression", icon = icon("buromobelexperte")),
menuItem("Gene pattern Comparaison", tabName = "geneComp", icon = icon("list-ol"),
menuSubItem("Gene comparaison Deseq2", tabName = "expressionBiplot", icon = icon("list-ol")),
menuSubItem("Gene comparaison TPM", tabName = "expressionBiplotTPM", icon = icon("list-ol"))
),
menuItem("Alternative_Splicing", tabName = "SGS_tab", icon = icon("cut"))
)
),
dashboardBody(
singleton(tags$head(HTML("
<script type='text/javascript'>
/* When recalculating starts, show loading screen */
$(document).on('shiny:recalculating', function(event) {
$('div#divLoading').addClass('show');
});
/* When new value or error comes in, hide loading screen */
$(document).on('shiny:value shiny:error', function(event) {
$('div#divLoading').removeClass('show');
});
</script>"))),
# CSS Code
singleton(tags$head(HTML(paste0("
<style type='text/css'>
#divLoading
{
display : none;
}
#divLoading.show
{
display : block;
position : fixed;
z-index: 100;
background-image : url('",img,"');
background-size:", imgsize, ";
background-repeat : no-repeat;
background-position : center;
left : 0;
bottom : 0;
right : 0;
top : 0;
}
#loadinggif.show
{
left : 50%;
top : 50%;
position : absolute;
z-index : 101;
-webkit-transform: translateY(-50%);
transform: translateY(-50%);
width: 100%;
margin-left : -16px;
margin-top : -16px;
}
div.content {
width : 1000px;
height : 1000px;
}
</style>")))),
tabItems(
tabItem(tabName = "expressionPlot",
box(status = "danger", width = 4, title = "Ploting gene expression", solidHeader = TRUE,
textInput(input = "geneName", label = "Enter Gene ID", value = "Gene_16"),
h5(strong("Arabidopsis orthologue : ")),
textOutput("annot1"),
h5(strong("Annotation :")),
textOutput("annot2"),
textOutput("annot3"),
br(),br(),br(),
h5(strong("Gene ontology")),
textOutput("annot4"),
h5(strong("plant ontology At orthologue")),
textOutput("annot5")
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "SweetK"),
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("Expression Plot", tabName = "expressionPlot", icon = icon("chart-line")),
menuItem("TPM normalisation", tabName = "TPM_expression", icon = icon("balance-scale")),
menuItem("Download Expression Matrix", tabName = "downloadTab", icon = icon("file-download")),
menuItem("SOM View", tabName = "SomClustering", icon = icon("layer-group")),
menuItem("Expression heatmap", tabName = "heatmapExpression", icon = icon("buromobelexperte")),
menuItem("Gene pattern Comparaison", tabName = "geneComp", icon = icon("list-ol"),
menuSubItem("Gene comparaison Deseq2", tabName = "expressionBiplot", icon = icon("list-ol")),
menuSubItem("Gene comparaison TPM", tabName = "expressionBiplotTPM", icon = icon("list-ol"))
),
menuItem("Alternative_Splicing", tabName = "SGS_tab", icon = icon("cut"))
)
),
dashboardBody(
singleton(tags$head(HTML("
<script type='text/javascript'>
/* When recalculating starts, show loading screen */
$(document).on('shiny:recalculating', function(event) {
$('div#divLoading').addClass('show');
});
/* When new value or error comes in, hide loading screen */
$(document).on('shiny:value shiny:error', function(event) {
$('div#divLoading').removeClass('show');
});
</script>"))),
# CSS Code
singleton(tags$head(HTML(paste0("
<style type='text/css'>
#divLoading
{
display : none;
}
#divLoading.show
{
display : block;
position : fixed;
z-index: 100;
background-image : url('",img,"');
background-size:", imgsize, ";
background-repeat : no-repeat;
background-position : center;
left : 0;
bottom : 0;
right : 0;
top : 0;
}
#loadinggif.show
{
left : 50%;
top : 50%;
position : absolute;
z-index : 101;
-webkit-transform: translateY(-50%);
transform: translateY(-50%);
width: 100%;
margin-left : -16px;
margin-top : -16px;
}
div.content {
width : 1000px;
height : 1000px;
}
</style>")))),
tabItems(
tabItem(tabName = "expressionPlot",
box(status = "danger", width = 4, title = "Ploting gene expression", solidHeader = TRUE,
textInput(input = "geneName", label = "Enter Gene ID", value = "Gene_16"),
h5(strong("Arabidopsis orthologue : ")),
textOutput("annot1"),
h5(strong("Annotation :")),
textOutput("annot2"),
textOutput("annot3"),
br(),br(),br(),
h5(strong("Gene ontology")),
textOutput("annot4"),
h5(strong("plant ontology At orthologue")),
textOutput("annot5")
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "SweetK"),
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("Expression Plot", tabName = "expressionPlot", icon = icon("chart-line")),
menuItem("TPM normalisation", tabName = "TPM_expression", icon = icon("balance-scale")),
menuItem("Download Expression Matrix", tabName = "downloadTab", icon = icon("file-download")),
menuItem("SOM View", tabName = "SomClustering", icon = icon("layer-group")),
menuItem("Expression heatmap", tabName = "heatmapExpression", icon = icon("buromobelexperte")),
menuItem("Gene pattern Comparaison", tabName = "geneComp", icon = icon("list-ol"),
menuSubItem("Gene comparaison Deseq2", tabName = "expressionBiplot", icon = icon("list-ol")),
menuSubItem("Gene comparaison TPM", tabName = "expressionBiplotTPM", icon = icon("list-ol"))
),
menuItem("Alternative_Splicing", tabName = "SGS_tab", icon = icon("cut"))
)
),
dashboardBody(
singleton(tags$head(HTML("
<script type='text/javascript'>
/* When recalculating starts, show loading screen */
$(document).on('shiny:recalculating', function(event) {
$('div#divLoading').addClass('show');
});
/* When new value or error comes in, hide loading screen */
$(document).on('shiny:value shiny:error', function(event) {
$('div#divLoading').removeClass('show');
});
</script>"))),
# CSS Code
singleton(tags$head(HTML(paste0("
<style type='text/css'>
#divLoading
{
display : none;
}
#divLoading.show
{
display : block;
position : fixed;
z-index: 100;
background-image : url('",img,"');
background-size:", imgsize, ";
background-repeat : no-repeat;
background-position : center;
left : 0;
bottom : 0;
right : 0;
top : 0;
}
#loadinggif.show
{
left : 50%;
top : 50%;
position : absolute;
z-index : 101;
-webkit-transform: translateY(-50%);
transform: translateY(-50%);
width: 100%;
margin-left : -16px;
margin-top : -16px;
}
div.content {
width : 1000px;
height : 1000px;
}
</style>")))),
tabItems(
tabItem(tabName = "expressionPlot",
box(status = "danger", width = 4, title = "Ploting gene expression", solidHeader = TRUE,
textInput(input = "geneName", label = "Enter Gene ID", value = "Gene_16"),
h5(strong("Arabidopsis orthologue : ")),
textOutput("annot1"),
h5(strong("Annotation :")),
textOutput("annot2"),
textOutput("annot3"),
br(),br(),br(),
h5(strong("Gene ontology")),
textOutput("annot4"),
h5(strong("plant ontology At orthologue")),
textOutput("annot5")
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "SweetK"),
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("Expression Plot", tabName = "expressionPlot", icon = icon("chart-line")),
menuItem("TPM normalisation", tabName = "TPM_expression", icon = icon("balance-scale")),
menuItem("Download Expression Matrix", tabName = "downloadTab", icon = icon("file-download")),
menuItem("SOM View", tabName = "SomClustering", icon = icon("layer-group")),
menuItem("Expression heatmap", tabName = "heatmapExpression", icon = icon("buromobelexperte")),
menuItem("Gene pattern Comparaison", tabName = "geneComp", icon = icon("list-ol"),
menuSubItem("Gene comparaison Deseq2", tabName = "expressionBiplot", icon = icon("list-ol")),
menuSubItem("Gene comparaison TPM", tabName = "expressionBiplotTPM", icon = icon("list-ol"))
),
menuItem("Alternative_Splicing", tabName = "SGS_tab", icon = icon("cut"))
)
),
dashboardBody(
singleton(tags$head(HTML("
<script type='text/javascript'>
/* When recalculating starts, show loading screen */
$(document).on('shiny:recalculating', function(event) {
$('div#divLoading').addClass('show');
});
/* When new value or error comes in, hide loading screen */
$(document).on('shiny:value shiny:error', function(event) {
$('div#divLoading').removeClass('show');
});
</script>"))),
# CSS Code
singleton(tags$head(HTML(paste0("
<style type='text/css'>
#divLoading
{
display : none;
}
#divLoading.show
{
display : block;
position : fixed;
z-index: 100;
background-image : url('",img,"');
background-size:", imgsize, ";
background-repeat : no-repeat;
background-position : center;
left : 0;
bottom : 0;
right : 0;
top : 0;
}
#loadinggif.show
{
left : 50%;
top : 50%;
position : absolute;
z-index : 101;
-webkit-transform: translateY(-50%);
transform: translateY(-50%);
width: 100%;
margin-left : -16px;
margin-top : -16px;
}
div.content {
width : 1000px;
height : 1000px;
}
</style>")))),
tabItems(
tabItem(tabName = "expressionPlot",
box(status = "danger", width = 4, title = "Ploting gene expression", solidHeader = TRUE,
textInput(input = "geneName", label = "Enter Gene ID", value = "Gene_16"),
h5(strong("Arabidopsis orthologue : ")),
textOutput("annot1"),
h5(strong("Annotation :")),
textOutput("annot2"),
textOutput("annot3"),
br(),br(),br(),
h5(strong("Gene ontology")),
textOutput("annot4"),
h5(strong("plant ontology At orthologue")),
textOutput("annot5")
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "SweetK"),
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("Expression Plot", tabName = "expressionPlot", icon = icon("chart-line")),
menuItem("TPM normalisation", tabName = "TPM_expression", icon = icon("balance-scale")),
menuItem("Download Expression Matrix", tabName = "downloadTab", icon = icon("file-download")),
menuItem("SOM View", tabName = "SomClustering", icon = icon("layer-group")),
menuItem("Expression heatmap", tabName = "heatmapExpression", icon = icon("buromobelexperte")),
menuItem("Gene pattern Comparaison", tabName = "geneComp", icon = icon("list-ol"),
menuSubItem("Gene comparaison Deseq2", tabName = "expressionBiplot", icon = icon("list-ol")),
menuSubItem("Gene comparaison TPM", tabName = "expressionBiplotTPM", icon = icon("list-ol"))
),
menuItem("Alternative_Splicing", tabName = "SGS_tab", icon = icon("cut"))
)
),
dashboardBody(
singleton(tags$head(HTML("
<script type='text/javascript'>
/* When recalculating starts, show loading screen */
$(document).on('shiny:recalculating', function(event) {
$('div#divLoading').addClass('show');
});
/* When new value or error comes in, hide loading screen */
$(document).on('shiny:value shiny:error', function(event) {
$('div#divLoading').removeClass('show');
});
</script>"))),
# CSS Code
singleton(tags$head(HTML(paste0("
<style type='text/css'>
#divLoading
{
display : none;
}
#divLoading.show
{
display : block;
position : fixed;
z-index: 100;
background-image : url('",img,"');
background-size:", imgsize, ";
background-repeat : no-repeat;
background-position : center;
left : 0;
bottom : 0;
right : 0;
top : 0;
}
#loadinggif.show
{
left : 50%;
top : 50%;
position : absolute;
z-index : 101;
-webkit-transform: translateY(-50%);
transform: translateY(-50%);
width: 100%;
margin-left : -16px;
margin-top : -16px;
}
div.content {
width : 1000px;
height : 1000px;
}
</style>")))),
tabItems(
tabItem(tabName = "expressionPlot",
box(status = "danger", width = 4, title = "Ploting gene expression", solidHeader = TRUE,
textInput(input = "geneName", label = "Enter Gene ID", value = "Gene_16"),
h5(strong("Arabidopsis orthologue : ")),
textOutput("annot1"),
h5(strong("Annotation :")),
textOutput("annot2"),
textOutput("annot3"),
br(),br(),br(),
h5(strong("Gene ontology")),
textOutput("annot4"),
h5(strong("plant ontology At orthologue")),
textOutput("annot5")
runApp('runApp (copie).R')
runApp('runApp (copie).R')
###############################
#####   Resume of data    #####
###############################
myURL <- "https://github.com/momaillard/RNAseq_ShinyApp/raw/master/data/dataForApp.RData"
load(url(myURL))
runApp('runApp (copie).R')
rm(Git.tVSD.center.scaled)
runApp('runApp (copie).R')
runApp('runApp (copie).R')
###############################
#####   Resume of data    #####
###############################
myURL <- "https://github.com/momaillard/RNAseq_ShinyApp/raw/master/data/dataForApp.RData"
load(url(myURL))
runApp('runApp (copie).R')
source(file = "src/source2App.R")
runApp('runApp (copie).R')
